syntax = "proto3";

option go_package = "github.com/zbsss/device-manager/generated";

package device_manager;

service DeviceManager {
  rpc GetAvailableDevices(GetAvailableDevicesRequest) returns (GetAvailableDevicesReply) {}

  rpc GetToken(GetTokenRequest) returns (GetTokenReply) {}
  rpc ReturnToken(ReturnTokenRequest) returns (ReturnTokenReply) {}

  rpc GetMemoryQuota(GetMemoryQuotaRequest) returns (GetMemoryQuotaReply) {}
  rpc ReturnMemoryQuota(ReturnMemoryQuotaRequest) returns (ReturnMemoryQuotaReply) {}

  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceReply) {}
  rpc RegisterPodQuota(RegisterPodQuotaRequest) returns (RegisterPodQuotaReply) {}
}

message GetTokenRequest {
  string device = 1;
  string pod = 2;
}

message GetTokenReply {
  int64 expires_at = 1;
}

message ReturnTokenRequest {
  string device = 1;
  string pod = 2;
}

message ReturnTokenReply {
}

message GetMemoryQuotaRequest {
  string device = 1;
  string pod = 2;
  uint64 memory = 3;
}

message GetMemoryQuotaReply {
}

message ReturnMemoryQuotaRequest {
  string device = 1;
  string pod = 2;
  uint64 memory = 3;
}

message ReturnMemoryQuotaReply {
}

message RegisterDeviceRequest {
  string device = 1;
  uint64 memory = 2;
}

message RegisterDeviceReply {
}

message RegisterPodQuotaRequest {
  string device = 1;
  string pod = 2;

  double requests = 3;
  double limit = 4;
  double memory = 5;
}

message RegisterPodQuotaReply {
}

message GetAvailableDevicesRequest {
  string vendor = 1;
  string model = 2;
}

message DeviceResources {
  string device_id = 1;
  double memory = 2;
  double requests = 3;
}

message GetAvailableDevicesReply {
  repeated DeviceResources devices = 1;
}
