syntax = "proto3";

option go_package = "github.com/zbsss/device-manager/pkg/devicemanager";

package device_manager;

service DeviceManager {
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceReply) {}
  rpc GetAvailableDevices(GetAvailableDevicesRequest) returns (GetAvailableDevicesReply) {}
  
  rpc ReservePodQuota(ReservePodQuotaRequest) returns (ReservePodQuotaReply) {}
  
  rpc GetToken(GetTokenRequest) returns (GetTokenReply) {}
  rpc ReturnToken(ReturnTokenRequest) returns (ReturnTokenReply) {}

  rpc AllocateMemory(AllocateMemoryRequest) returns (AllocateMemoryReply) {}
  rpc FreeMemory(FreeMemoryRequest) returns (FreeMemoryReply) {}
}

message GetTokenRequest {
  string device_id = 1;
  string pod_id = 2;
}

message GetTokenReply {
  int64 expires_at = 1;
}

message ReturnTokenRequest {
  string device_id = 1;
  string pod_id = 2;
}

message ReturnTokenReply {
}

message AllocateMemoryRequest {
  string device_id = 1;
  string pod_id = 2;
  uint64 memory_b = 3;
}

message AllocateMemoryReply {
}

message FreeMemoryRequest {
  string device_id = 1;
  string pod_id = 2;
  uint64 memory_b = 3;
}

message FreeMemoryReply {
}

message RegisterDeviceRequest {
  string vendor = 1;
  string model = 2;
  string device_id = 3;
  
  uint64 memory_b = 4;

  string allocator_pod_id = 5;
}

message RegisterDeviceReply {
}

message ReservePodQuotaRequest {
  string device_id = 1;
  string pod_id = 2;

  double requests = 3;
  double limit = 4;
  double memory = 5;
}

message ReservePodQuotaReply {
}

message GetAvailableDevicesRequest {
  string vendor = 1;
  string model = 2;
}

message FreeDeviceResources {
  string device_id = 1;
  double memory = 2;
  double requests = 3;
}

message GetAvailableDevicesReply {
  repeated FreeDeviceResources free = 1;
}
